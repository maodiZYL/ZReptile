package main

import (
	"crypto/tls"
	"database/sql"
	"encoding/json"
	"fmt"
	_ "github.com/go-sql-driver/mysql"
	"golang.org/x/net/proxy"
	"io/ioutil"
	"net/http"
	"strings"
)

type AutoGenerated3 struct {
	Data []struct {
		ID       string `json:"_id"`
		Nickname string `json:"nickname"`
		Gender   int    `json:"gender"`
	} `json:"data"`
}

func main() {

	url := "https://api.appweimo.com/user/blindDatelist"

	//创建代理
	auth := proxy.Auth{
		User:     "itemb123",
		Password: "kIl8Jl3aKej",
	}
	address := fmt.Sprintf("%s:%s", "101.133.153.21", "9999")
	dialer, err := proxy.SOCKS5("tcp", address, &auth, proxy.Direct)
	if err != nil {
		return
	}

	payload := strings.NewReader("location=116.23128%40.22077&type=1&offset=0") // post传"application/x-www-form-urlencoded“参
	req, _ := http.NewRequest("POST", url, payload)
	req.Header.Add("Content-type", "application/x-www-form-urlencoded")
	req.Header.Add("Authorization", "Bearer c0b6qzLbAq7oAPD9Zeee46mD2Howzrb09uvwn1LS03zsSOsvE4iop-2h6iDXLAVesgg2FAI")
	req.Header.Add("Accept-encoding", "gzip")
	req.Header.Add("Content-length", "63")
	req.Header.Add("Host", "<calculated when request is sent>")
	req.Header.Add("User-agent", "okhttp/3.12.0")

	//使用代理
	var resp *http.Response
	httpTransport := &http.Transport{
		//跳过证书验证
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	httpClient := &http.Client{Transport: httpTransport}
	if dialer != nil {
		httpTransport.Dial = dialer.Dial
	}
	resp, err = httpClient.Do(req)
	if err != nil {
		return
	}

	//resp, _ := http.DefaultClient.Do(req)
	defer resp.Body.Close()
	body, _ := ioutil.ReadAll(resp.Body)
	var tem AutoGenerated3     //用结构体
	json.Unmarshal(body, &tem) //将查到的数据放到结构体中
	//fmt.Println(tem)
	save3(tem)
}

func save3(userlist3 AutoGenerated3) {
	db, err := sql.Open("mysql", "root:haosql@tcp(127.0.0.1:3306)/blogdb?charset=utf8") //链接数据库

	stmt, err := db.Prepare("INSERT weimo (nid,nameid,sex) values (?,?,?)") //插入语句   字段不能填错
	if err != nil {
		fmt.Printf(err.Error())
	}
	for i := 0; i < len(userlist3.Data); i++ { //循环插入
		_, err := stmt.Exec(userlist3.Data[i].ID, userlist3.Data[i].Nickname, userlist3.Data[i].Gender) //执行数据存储
		if err != nil {
			continue
		}
		fmt.Println(userlist3.Data[i].ID, userlist3.Data[i].Nickname, userlist3.Data[i].Gender)
	}
	db.Close()
}
